"""empty message

Revision ID: 756e9e5fe99e
Revises: 
Create Date: 2023-03-08 11:45:09.466594

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '756e9e5fe99e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('Project',
    sa.Column('id', sa.BIGINT(), server_default=sa.text('generate_snowflake_id()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('start_date', sa.Date(), nullable=False),
    sa.Column('end_date', sa.Date(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('User',
    sa.Column('id', sa.BIGINT(), server_default=sa.text('generate_snowflake_id()'), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=True),
    sa.Column('role', postgresql.ENUM('DEVELOPER', 'TESTER', 'ADMINISTRATOR', name='roles'), nullable=False),
    sa.Column('date_created', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('Bug',
    sa.Column('id', sa.BIGINT(), server_default=sa.text('generate_snowflake_id()'), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('status', postgresql.ENUM('NEW', 'ASSIGNED', 'IN_PROGRESS', 'FIXED', 'VERIFIED', 'CLOSED', 'DEFERRED', 'DUPLICATE', name='status'), nullable=False),
    sa.Column('severity', postgresql.ENUM('CRITICAL', 'MAJOR', 'MINOR', 'TRIVIAL', 'ENHANCEMENT', name='severity'), nullable=False),
    sa.Column('date_reported', sa.DateTime(), server_default=sa.text('now()'), nullable=False),
    sa.Column('date_resolved', sa.DateTime(), nullable=True),
    sa.Column('project_id', sa.BIGINT(), nullable=True),
    sa.Column('reporter_id', sa.BIGINT(), nullable=True),
    sa.Column('assignee_id', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['User.id'], ),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Notification',
    sa.Column('id', sa.BIGINT(), server_default=sa.text('generate_snowflake_id()'), nullable=False),
    sa.Column('text', sa.String(), nullable=False),
    sa.Column('date_created', sa.String(), nullable=False),
    sa.Column('users_id', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['users_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('project_user_association',
    sa.Column('project_id', sa.BIGINT(), nullable=True),
    sa.Column('user_id', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['Project.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], )
    )
    op.create_table('Comment',
    sa.Column('id', sa.BIGINT(), server_default=sa.text('generate_snowflake_id()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=False),
    sa.Column('date_created', sa.DateTime(), nullable=False),
    sa.Column('user_id', sa.BIGINT(), nullable=True),
    sa.Column('bug_id', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['bug_id'], ['Bug.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('Attachment',
    sa.Column('id', sa.BIGINT(), server_default=sa.text('generate_snowflake_id()'), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('size', sa.BIGINT(), nullable=True),
    sa.Column('mongodb_id', sa.String(), nullable=False),
    sa.Column('comment_id', sa.BIGINT(), nullable=True),
    sa.Column('bug_id', sa.BIGINT(), nullable=True),
    sa.ForeignKeyConstraint(['bug_id'], ['Bug.id'], ),
    sa.ForeignKeyConstraint(['comment_id'], ['Comment.id'], ),
    sa.ForeignKeyConstraint(['size'], ['User.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('Attachment')
    op.drop_table('Comment')
    op.drop_table('project_user_association')
    op.drop_table('Notification')
    op.drop_table('Bug')
    op.drop_table('User')
    op.drop_table('Project')
    # ### end Alembic commands ###
